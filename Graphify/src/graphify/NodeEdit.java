/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphify;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Iterator;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ayomitunde
 */
public class NodeEdit extends javax.swing.JFrame {

    /**
     * Creates new form NodeEdit
     */
    static String[] lstMod = {"Destination Node(s)", "Weight"};
    static DefaultTableModel _listerModel = new DefaultTableModel(0, 0);
    Vertex _current = null;
    Vertex _dest = null;
    Integer _selectedRow = null;
    Integer _selectedColumn = null;

    public NodeEdit() {
        initComponents();
        tblProperties.getTableHeader().setResizingAllowed(false);
        tblProperties.getTableHeader().setReorderingAllowed(false);
        tblProperties.setColumnSelectionAllowed(true);
        tblProperties.setRowSelectionAllowed(true);
        tblProperties.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        _listerModel.setColumnIdentifiers(lstMod);
        tblProperties.setModel(_listerModel);
        tblProperties.addMouseListener(new MouseAdapter(){
            @Override
            public void mousePressed(MouseEvent e){
                _selectedRow = tblProperties.getSelectedRow();
                _selectedColumn = tblProperties.getSelectedColumn();
                Object v = _listerModel.getValueAt(_selectedRow, 0);
                int vert = Integer.parseInt(String.valueOf(v).trim());
                _dest = Model.vertices.get(vert);
            }
        });
        lstAllNodes.addMouseListener(new MouseAdapter() {
            String selected = "";

            @Override
            public void mousePressed(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    _listerModel.setRowCount(0);
                    selected = lstAllNodes.getSelectedItem();
                    if (selected != null) {
                        selected = selected.replace("Vertex ", "").trim();
                        _current = Model.vertices.get(Integer.parseInt(selected));
                        Model.edges.stream().filter((edge) -> (edge.getSource().equals(_current))).forEach((edge) -> {
                            _dest = edge.getDest();
                            _listerModel.addRow(new Object[]{edge.getDest().getLabel(), edge.getWeight()});
                        });
                    }
                }
            }

//            @Override
//            public void mouseReleased(MouseEvent e) {
//
//            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lstAllNodes = new java.awt.List();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProperties = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnRouteInfo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 3, 18)); // NOI18N
        jLabel1.setText("Node Properties");

        jScrollPane1.setViewportView(tblProperties);

        btnUpdate.setText("Update Weight");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnRouteInfo.setText("Routing Info");
        btnRouteInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRouteInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lstAllNodes, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRouteInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(219, 219, 219))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lstAllNodes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnRouteInfo))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (_selectedRow != null) {
            Object w = _listerModel.getValueAt(_selectedRow, 1);
            int weight = 0;
            if (w != null) {
                weight = Integer.parseInt(w.toString());
                if (_current != null && _dest != null) {
                    for (Edge e : Model.edges) {
                        if (e.getSource().equals(_current) && e.getDest().equals(_dest)) {
                            e.setWeight(weight);
                        }
                    }
                    Model.Gui.graph();
                }
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    void routeInfo(){
        for(Integer i : Model.vertices.keySet()){
            Vertex v = Model.vertices.get(i);
            //_listerModel.addRow(new Object[]{edge.getDest().getLabel(), edge.getWeight()});
            _listerModel.addRow(new Object[]{v.label, v.parent.label, null});
        }
    }
    private void btnRouteInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRouteInfoActionPerformed
        // TODO add your handling code here:
        String[] lstMod2 = {"Node", "Parent", "Weight"};
        if(!"Node Properties".equals(btnRouteInfo.getText())){
            _listerModel.setColumnIdentifiers(lstMod2);
            routeInfo();
            btnRouteInfo.setText("Node Properties");
        }else{
            _listerModel.setColumnIdentifiers(lstMod);
            btnRouteInfo.setText("Routing Info");
        }
    }//GEN-LAST:event_btnRouteInfoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void load() {
        for (Iterator<Integer> v = Model.vertices.keySet().iterator(); v.hasNext();) {
            Integer n = v.next();
            Vertex vert = Model.vertices.get(n);
            lstAllNodes.add("Vertex " + vert.getLabel());
        }
    }

    public static void run() {
        new NodeEdit().setVisible(true);
        load();
    }
//    public static void run() {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(NodeEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(NodeEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(NodeEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(NodeEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new NodeEdit().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRouteInfo;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static java.awt.List lstAllNodes;
    private javax.swing.JTable tblProperties;
    // End of variables declaration//GEN-END:variables
}
